# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

[ ! "$FRESH_PYTHON" ] && bpwatch start pip_install
[ "$FRESH_PYTHON" ] && bpwatch start pip_install_first

set-env LIBRARY_PATH $LIBRARY_PATH:/app/vendor/lib/atlas-base:/app/vendor/lib/atlas-base/atlas
set-env LD_LIBRARY_PATH $LD_LIBRARY_PATH:/app/vendor/lib/atlas-base:/app/vendor/lib/atlas-base/atlas

set +e
/app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --disable-pip-version-check --no-cache-dir | cleanup | log-output | indent
PIP_STATUS="${PIPESTATUS[0]}"
set -e

if [[ ! $PIP_STATUS -eq 0 ]]; then
    echo
    show-warnings
    exit 1
fi


# Smart Requirements handling
cp requirements.txt .heroku/python/requirements-declared.txt
/app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt

[ ! "$FRESH_PYTHON" ] && bpwatch stop pip_install
[ "$FRESH_PYTHON" ] && bpwatch stop pip_install_first

echo